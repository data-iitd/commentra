# Initialize an empty list 'l' to store the generated numbers
l = [ ]

# Set the limit value for the generated numbers
limit = 10000000000

# Function definition to generate numbers recursively
def gen(number, four, seven):
    # Base case: if the number is greater than the limit, return
    if number > limit:
        return

    # Recursive case 1: if the number is positive and four is equal to seven, append it to the list 'l'
    if number > 0 and four == seven:
        l.append(number)

    # Recursive call for the next number generated by adding 10 to the current number and updating the values of 'four' and 'seven'
    gen(number * 10 + 4, four + 1, seven)

    # Recursive call for the next number generated by adding 10 to the current number and updating the values of 'four' and 'seven'
    gen(number * 10 + 7, four, seven + 1)

# Main function definition
def main():
    # Call the 'gen' function with initial values of 0, 0, and 0
    gen(0, 0, 0)

    # Sort the list 'l' in ascending order
    l.sort()

    # Read the input number 'n' from the user
    n = int(input())

    # Initialize the answer variable 'ans' to 0
    ans = 0

    # Iterate through the sorted list 'l' and find the first number that is greater than or equal to 'n'
    for val in l:
        if val >= n:
            # Update the answer variable 'ans' with the found number and break the loop
            ans = val
            break

    # Print the answer
    print(ans)

# Call the main function
main()
