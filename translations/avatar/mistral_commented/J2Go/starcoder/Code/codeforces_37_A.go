
package main

import (
	"bufio"
	"fmt"
	"os"
	"strconv"
	"strings"
)

// FastScanner is a helper class for reading input from stdin
type FastScanner struct {
	s   *bufio.Scanner
	buf []byte
}

// NewFastScanner returns a new instance of FastScanner
func NewFastScanner() *FastScanner {
	return &FastScanner{
		s:   bufio.NewScanner(os.Stdin),
		buf: make([]byte, 0),
	}
}

// Split splits the input by a space and returns a slice of strings
func (f *FastScanner) Split() []string {
	f.s.Scan()
	return strings.Split(f.s.Text(), " ")
}

// NextInt32 reads the next input from stdin and returns it as an integer
func (f *FastScanner) NextInt32() int32 {
	f.s.Scan()
	i, _ := strconv.ParseInt(f.s.Text(), 10, 32)
	return int32(i)
}

// NextInt64 reads the next input from stdin and returns it as an integer
func (f *FastScanner) NextInt64() int64 {
	f.s.Scan()
	i, _ := strconv.ParseInt(f.s.Text(), 10, 64)
	return i
}

// NextString reads the next input from stdin and returns it as a string
func (f *FastScanner) NextString() string {
	f.s.Scan()
	return f.s.Text()
}

// NextFloat64 reads the next input from stdin and returns it as a float64
func (f *FastScanner) NextFloat64() float64 {
	f.s.Scan()
	i, _ := strconv.ParseFloat(f.s.Text(), 64)
	return i
}

// NextBool reads the next input from stdin and returns it as a boolean
func (f *FastScanner) NextBool() bool {
	f.s.Scan()
	i, _ := strconv.ParseBool(f.s.Text())
	return i
}

func main() {
	// Create a new instance of FastScanner
	scanner := NewFastScanner()

	// Read the number of integers from stdin
	n := scanner.NextInt32()

	// Initialize an empty map with integer keys and integer values
	m := make(map[int32]int32)

	// Iterate through the given number of integers and add each integer to the map with its count
	for i := int32(0); i < n; i++ {
		val := scanner.NextInt32() // Read the next integer from stdin
		m[val]++                  // Add the integer to the map with its count or 1 if it's the first occurrence
	}

	// Initialize minimum value and maximum value variables
	max := int32(0)
	for _, v := range m {
		// Update the maximum value if the current entry's value is greater than the maximum value
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int32(max)
		max = int3