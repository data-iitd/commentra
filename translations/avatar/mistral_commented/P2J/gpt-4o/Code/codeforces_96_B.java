import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class Main {
    // Initialize a list to store the generated numbers
    static List<Long> l = new ArrayList<>();

    // Set the limit value for the generated numbers
    static final long LIMIT = 10000000000L;

    // Function to generate numbers recursively
    static void gen(long number, int four, int seven) {
        // Base case: if the number is greater than the limit, return
        if (number > LIMIT) {
            return;
        }

        // Recursive case: if the number is positive and four is equal to seven, add it to the list 'l'
        if (number > 0 && four == seven) {
            l.add(number);
        }

        // Recursive call for the next number generated by adding 10 to the current number and updating the values of 'four' and 'seven'
        gen(number * 10 + 4, four + 1, seven);
        // Recursive call for the next number generated by adding 10 to the current number and updating the values of 'four' and 'seven'
        gen(number * 10 + 7, four, seven + 1);
    }

    // Main function
    public static void main(String[] args) {
        // Call the 'gen' function with initial values of 0, 0, and 0
        gen(0, 0, 0);

        // Sort the list 'l' in ascending order
        Collections.sort(l);

        // Read the input number 'n' from the user
        Scanner scanner = new Scanner(System.in);
        long n = scanner.nextLong();

        // Initialize the answer variable 'ans' to 0
        long ans = 0;

        // Iterate through the sorted list 'l' and find the first number that is greater than or equal to 'n'
        for (long val : l) {
            if (val >= n) {
                // Update the answer variable 'ans' with the found number and break the loop
                ans = val;
                break;
            }
        }

        // Print the answer
        System.out.println(ans);
    }
}

// <END-OF-CODE>
