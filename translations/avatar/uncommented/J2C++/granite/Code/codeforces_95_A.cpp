
#include <iostream> #include <string> #include <algorithm> #include <vector> using namespace std; int compare ( const string &aa, int i, const string &bb, int j, int m ) { while ( m -- > 0 ) { char a = toupper ( aa [ i ] ) ; char b = toupper ( bb [ j ] ) ; if ( a!= b ) return a - b ; i ++ ; j ++ ; } return 0 ; } int main ( ) { int n ; cin >> n ; vector < string > ss ( n ) ; for ( int i = 0 ; i < n ; i ++ ) cin >> ss [ i ] ; string cc ; cin >> cc ; char c ; cin >> c ; char c_ = toupper ( c ) ; char a = c == 'a'? 'b' : 'a' ; char a_ = toupper ( a ) ; vector < bool > lucky ( cc.size ( ) ) ; for ( int j = 0 ; j < cc.size ( ) ; j ++ ) for ( int i = 0 ; i < n ; i ++ ) { int l = ss [ i ].size ( ) ; if ( cc.size ( ) - j >= l && compare ( cc, j, ss [ i ], 0, l ) == 0 ) for ( int h = 0 ; h < l ; h ++ ) lucky [ j + h ] = true ; } for ( int j = 0 ; j < cc.size ( ) ; j ++ ) if ( lucky [ j ] ) { if ( tolower ( cc [ j ] ) == c ) cc [ j ] = isupper ( cc [ j ] )? a_ : a ; else cc [ j ] = isupper ( cc [ j ] )? c_ : c ; } cout << cc << endl ; return 0 ; } 