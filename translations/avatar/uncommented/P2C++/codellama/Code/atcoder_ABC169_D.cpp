#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define pb push_back
#define mp make_pair
#define endl '\n'
#define debug(x) cout << #x << " = " << x << endl
#define all(x) (x).begin(), (x).end()
#define allr(x) (x).rbegin(), (x).rend()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x) (x).size()
#define allc(x) (x).clear()
#define allp(x) (x).pop_back()
#define allf(x) (x).front()
#define allb(x) (x).back()
#define alls(x)