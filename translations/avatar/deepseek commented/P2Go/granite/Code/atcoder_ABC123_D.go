

package main

import (
    "bufio"
    "fmt"
    "os"
    "strconv"
    "strings"
)

func main() {
    reader := bufio.NewReaderSize(os.Stdin, 1024*1024)

    var x, y, z, k int
    var _str string
    var err error

    _str, err = reader.ReadString('\n')
    if err!= nil {
        panic(err)
    }
    _str = strings.TrimSpace(_str)
    _list := strings.Split(_str, " ")
    x, err = strconv.Atoi(_list[0])
    if err!= nil {
        panic(err)
    }
    y, err = strconv.Atoi(_list[1])
    if err!= nil {
        panic(err)
    }
    z, err = strconv.Atoi(_list[2])
    if err!= nil {
        panic(err)
    }
    k, err = strconv.Atoi(_list[3])
    if err!= nil {
        panic(err)
    }

    var a []int
    for i := 0; i < x; i++ {
        _str, err = reader.ReadString('\n')
        if err!= nil {
            panic(err)
        }
        _str = strings.TrimSpace(_str)
        _list := strings.Split(_str, " ")
        for _, num := range _list {
            _val, err := strconv.Atoi(num)
            if err!= nil {
                panic(err)
            }
            a = append(a, _val)
        }
    }

    var b []int
    for i := 0; i < y; i++ {
        _str, err = reader.ReadString('\n')
        if err!= nil {
            panic(err)
        }
        _str = strings.TrimSpace(_str)
        _list := strings.Split(_str, " ")
        for _, num := range _list {
            _val, err := strconv.Atoi(num)
            if err!= nil {
                panic(err)
            }
            b = append(b, _val)
        }
    }

    var c []int
    for i := 0; i < z; i++ {
        _str, err = reader.ReadString('\n')
        if err!= nil {
            panic(err)
        }
        _str = strings.TrimSpace(_str)
        _list := strings.Split(_str, " ")
        for _, num := range _list {
            _val, err := strconv.Atoi(num)
            if err!= nil {
                panic(err)
            }
            c = append(c, _val)
        }
    }

    ab := make([]int, 0)
    for i := 0; i < x; i++ {
        for j := 0; j < y; j++ {
            ab = append(ab, a[i]+b[j])
        }
    }

    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(ab, c...)
    ab = append(a