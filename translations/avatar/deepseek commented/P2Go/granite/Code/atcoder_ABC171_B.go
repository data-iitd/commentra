
package main

import (
	"bufio"
	"fmt"
	"os"
	"strconv"
	"strings"
)

func main() {
	// This line takes two integers, n and k, as input from the user.
	reader := bufio.NewReader(os.Stdin)
	n, _ := strconv.Atoi(strings.TrimSpace(readLine(reader)))
	k, _ := strconv.Atoi(strings.TrimSpace(readLine(reader)))

	// This line prints the sum of the first k smallest numbers from the list of integers input in the next line.
	arr := strings.Split(readLine(reader), " ")
	arr_temp := make([]int, len(arr))
	for i := 0; i < len(arr); i++ {
		arr_item, _ := strconv.Atoi(arr[i])
		arr_temp[i] = arr_item
	}
	arr = nil
	fmt.Println(getSum(arr_temp, k))
}

func readLine(reader *bufio.Reader) string {
	str, _, err := reader.ReadLine()
	if err == nil {
		return string(str)
	}

	return ""
}

func getSum(arr []int, k int) int32 {
	sum := int32(0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append(arr, 0)
	arr = append