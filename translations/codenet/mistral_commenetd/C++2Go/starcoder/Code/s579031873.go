<<<<<<< HEAD
=======
package main
>>>>>>> 98c87cb78a (data updated)

import (
	"bufio"
	"fmt"
	"os"
	"strconv"
	"strings"
)

func main() {
	reader := bufio.NewReader(os.Stdin)
	fmt.Println("Enter the number of roads and queries: ")
	input, _ := reader.ReadString('\n')
	input = strings.TrimSpace(input)
	input = strings.Replace(input, "\n", "", -1)
	input = strings.Replace(input, "\r", "", -1)
	input = strings.Replace(input, "\t", "", -1)
	input = strings.Replace(input, " ", "", -1)
	inputs := strings.Split(input, ",")
	N, _ := strconv.Atoi(inputs[0])
	X, _ := strconv.Atoi(inputs[1])
	fmt.Println("Enter the length of each road: ")
	roads := make([]int, N)
	for i := 0; i < N; i++ {
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)
		input = strings.Replace(input, "\n", "", -1)
		input = strings.Replace(input, "\r", "", -1)
		input = strings.Replace(input, "\t", "", -1)
		input = strings.Replace(input, " ", "", -1)
		roads[i], _ = strconv.Atoi(input)
	}
	fmt.Println("Enter the length of each query: ")
	qs := make([]int, N)
	for i := 0; i < N; i++ {
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)
		input = strings.Replace(input, "\n", "", -1)
		input = strings.Replace(input, "\r", "", -1)
		input = strings.Replace(input, "\t", "", -1)
		input = strings.Replace(input, " ", "", -1)
		qs[i], _ = strconv.Atoi(input)
	}
	fmt.Println("Enter the number of queries: ")
	input, _ := reader.ReadString('\n')
	input = strings.TrimSpace(input)
	input = strings.Replace(input, "\n", "", -1)
	input = strings.Replace(input, "\r", "", -1)
	input = strings.Replace(input, "\t", "", -1)
	input = strings.Replace(input, " ", "", -1)
	Q, _ := strconv.Atoi(input)
	fmt.Println("Enter the length of each query: ")
	qs := make([]int, Q)
	for i := 0; i < Q; i++ {
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)
		input = strings.Replace(input, "\n", "", -1)
		input = strings.Replace(input, "\r", "", -1)
		input = strings.Replace(input, "\t", "", -1)
		input = strings.Replace(input, " ", "", -1)
		qs[i], _ = strconv.Atoi(input)
	}
	fmt.Println("Enter the number of queries: ")
	input, _ := reader.ReadString('\n')
	input = strings.TrimSpace(input)
	input = strings.Replace(input, "\n", "", -1)
	input = strings.Replace(input, "\r", "", -1)
	input = strings.Replace(input, "\t", "", -1)
	input = strings.Replace(input, " ", "", -1)
	Q, _ := strconv.Atoi(input)
	fmt.Println("Enter the length of each query: ")
	qs := make([]int, Q)
	for i := 0; i < Q; i++ {
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)
		input = strings.Replace(input, "\n", "", -1)
		input = strings.Replace(input, "\r", "", -1)
		input = strings.Replace(input, "\t", "", -1)
		input = strings.Replace(input, " ", "", -1)
		qs[i], _ = strconv.Atoi(input)
	}
	fmt.Println("Enter the number of queries: ")
	input, _ := reader.ReadString('\n')
	input = strings.TrimSpace(input)
	input = strings.Replace(input, "\n", "", -1)
	input = strings.Replace(input, "\r", "", -1)
	input = strings.Replace(input, "\t", "", -1)
	input = strings.Replace(input, " ", "", -1)
	Q, _ := strconv.Atoi(input)
	fmt.Println("Enter the length of each query: ")
	qs := make([]int, Q)
	for i := 0; i < Q; i++ {
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)
		input = strings.Replace(input, "\n", "", -1)
		input = strings.Replace(input, "\r", "", -1)
		input = strings.Replace(input, "\t", "", -1)
		input = strings.Replace(input, " ", "", -1)
		qs[i], _ = strconv.Atoi(input)
	}
	fmt.Println("Enter the number of queries: ")
	input, _ := reader.ReadString('\n')
	input = strings.TrimSpace(input)
	input = strings.Replace(input, "\n", "", -1)
	input = strings.Replace(input, "\r", "", -1)
	input = strings.Replace(input, "\t", "", -1)
	input = strings.Replace(input, " ", "", -1)
	Q, _ := strconv.Atoi(input)
	fmt.Println("Enter the length of each query: ")
	qs := make([]int, Q)
	for i := 0; i < Q; i++ {
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)
		input = strings.Replace(input, "\n", "", -1)
		input = strings.Replace(input, "\r", "", -1)
		input = strings.Replace(input, "\t", "", -1)
		input = strings.Replace(input, " ", "", -1)
		qs[i], _ = strconv.Atoi(input)
	}
	fmt.Println("Enter the number of queries: ")
	input, _ := reader.ReadString('\n')
	input = strings.TrimSpace(input)
	input = strings.Replace(input, "\n", "", -1)
	input = strings.Replace(input, "\r", "", -1)
	input = strings.Replace(input, "\t", "", -1)
	input = strings.Replace(input, " ", "", -1)
	Q, _ := strconv.Atoi(input)
	fmt.Println("Enter the length of each query: ")
	qs := make([]int, Q)
	for i := 0; i < Q; i++ {
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)
		input = strings.Replace(input, "\n", "", -1)
		input = strings.Replace(input, "\r", "", -1)
		input = strings.Replace(input, "\t", "", -1)
		input = strings.Replace(input, " ", "", -1)
		qs[i], _ = strconv.Atoi(input)
	}
	fmt.Println("Enter the number of queries: ")
	input, _ := reader.ReadString('\n')
	input = strings.TrimSpace(input)
	input = strings.Replace(input, "\n", "", -1)
	input = strings.Replace(input, "\r", "", -1)
	input = strings.Replace(input, "\t", "", -1)
	input = strings.Replace(input, " ", "", -1)
	Q, _ := strconv.Atoi(input)
	fmt.Println("Enter the length of each query: ")
	qs := make([]int, Q)
	for i := 0; i < Q; i++ {
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)
		input = strings.Replace(input, "\n", "", -1)
		input = strings.Replace(input, "\r", "", -1)
		input = strings.Replace(input, "\t", "", -1)
		input = strings.Replace(input, " ", "", -1)
		qs[i], _ = strconv.Atoi(input)
	}
	fmt.Println("Enter the number of queries: ")
	input, _ := reader.ReadString('\n')
	input = strings.TrimSpace(input)
	input = strings.Replace(input, "\n", "", -1)
	input = strings.Replace(input, "\r", "", -1)
	input = strings.Replace(input, "\t", "", -1)
	input = strings.Replace(input, " ", "", -1)
	Q, _ := strconv.Atoi(input)
	fmt.Println("Enter the length of each query: ")
	qs := make([]int, Q)
	for i := 0; i < Q; i++ {
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)
		input = strings.Replace(input, "\n", "", -1)
		input = strings.Replace(input, "\r", "", -1)
		input = strings.Replace(input, "\t", "", -1)
		input = strings.Replace(input, " ", "", -1)
		qs[i], _ = strconv.Atoi(input)
	}
	fmt.Println("Enter the number of queries: ")
	input, _ := reader.ReadString('\n')
	input = strings.TrimSpace(input)
	input = strings.Replace(input, "\n", "", -1)
	input = strings.Replace(input, "\r", "", -1)
	input = strings.Replace(input, "\t", "", -1)
	input = strings.Replace(input, " ", "", -1)
	Q, _ := strconv.Atoi(input)
	fmt.Println("Enter the length of each query: ")
	qs := make([]int, Q)
	for i := 0; i < Q; i++ {
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)
		input = strings.Replace(input, "\n", "", -1)
		input = strings.Replace(input, "\r", "", -1)
		input = strings.Replace(input, "\t", "", -1)
		input = strings.Replace(input, " ", "", -1)
		qs[i], _ = strconv.Atoi(input)
	}
	fmt.Println("Enter the number of queries: ")
	input, _ := reader.ReadString('\n')
	input = strings.TrimSpace(input)
	input = strings.Replace(input, "\n", "", -1)
	input = strings.Replace(input, "\r", "", -1)
	input = strings.Replace(input, "\t", "", -1)
	input = strings.Replace(input, " ", "", -1)
	Q, _ := strconv.Atoi(input)
	fmt.Println("Enter the length of each query: ")
	qs := make([]int, Q)
	for i := 0; i < Q; i++ {
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)
		input = strings.Replace(input, "\n", "", -1)
		input = strings.Replace(input, "\r", "", -1)
		input = strings.Replace(input, "\t", "", -1)
		input = strings.Replace(input, " ", "", -1)
		qs[i], _ = strconv.Atoi(input)
	}
	fmt.Println("Enter the number of queries: ")
	input, _ := reader.ReadString('\n')
	input = strings.TrimSpace(input)
	input = strings.Replace(input, "\n", "", -1)
	input = strings.Replace(input, "\r", "", -1)
	input = strings.Replace(input, "\t", "", -1)
	input = strings.Replace(input, " ", "", -1)
	Q, _ := strconv.Atoi(input)
	fmt.Println("Enter the length of each query: ")
	qs := make([]int, Q)
	for i := 0; i < Q; i++ {
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)
		input = strings.Replace(input, "\n", "", -1)
		input = strings.Replace(input, "\r", "", -1)
		input = strings.Replace(input, "\t", "", -1)
		input = strings.Replace(input, " ", "", -1)
		qs[i], _ = strconv.Atoi(input)
	}
	fmt.Println("Enter the number of queries: ")
	input, _ := reader.ReadString('\n')
	input = strings.TrimSpace(input)
	input = strings.Replace(input, "\n", "", -1)
	input = strings.Replace(input, "\r", "", -1)
	input = strings.Replace(input, "\t", "", -1)
	input = strings.Replace(input, " ", "", -1)
	Q, _ := strconv.Atoi(input)
	fmt.Println("Enter the length of each query: ")
	qs := make([]int, Q)
	for i := 0; i < Q; i++ {
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)
		input = strings.Replace(input, "\n", "", -1)
		input = strings.Replace(input, "\r", "", -1)
		input = strings.Replace(input, "\t", "", -1)
		input = strings.Replace(input, " ", "", -1)
		qs[i], _ = strconv.Atoi(input)
	}
	fmt.Println("Enter the number of queries: ")
	input, _ := reader.ReadString('\n')
	input = strings.TrimSpace(input)
	input = strings.Replace(input, "\n", "", -1)
	input = strings.Replace(input, "\r", "", -1)
	input = strings.Replace(input, "\t", "", -1)
	input = strings.Replace(input, " ", "", -1)
	Q, _ := strconv.Atoi(input)
	fmt.Println("Enter the length of each query: ")
	qs := make([]int, Q)
	for i := 0; i < Q; i++ {
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)
		input = strings.Replace(input, "\n", "", -1)
		input = strings.Replace(input, "\r", "", -1)
		input = strings.Replace(input, "\t", "", -1)
		input = strings.Replace(input, " ", "", -1)
		qs[i], _ = strconv.Atoi(input)
	}
	fmt.Printl