
import java.io.*;
import java.util.*;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int numCommand = sc.nextInt();
		String[] command = new String[COMMAND_LENGTH];
		int iCommand;
		ST_NODE root = null;
		int insertKey;
		int rtnStrcmp;

		for (iCommand = 0; iCommand < numCommand; iCommand++) {
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();
			sc.next();