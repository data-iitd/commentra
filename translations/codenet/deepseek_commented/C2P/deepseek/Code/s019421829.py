MAX = 707106  # sqrt(10^12/2)
tbl = [0] * (MAX + 1)

prime = [
    2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 
    73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173,
    179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281,
    283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409,
    419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541,
    547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659,
    661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809,
    811, 821, 823, 827, 829, 839, 853
]

sqp = [
    4, 9, 25, 49, 121, 169, 289, 361, 529, 841, 961, 1369, 1681, 1849, 2209, 2809, 3481, 3721, 4489, 5041,
    5329, 6241, 6889, 7921, 9409, 10201, 10609, 11449, 11881, 12769, 16129, 17161, 18769, 19321, 22201, 22801, 24649, 26569, 27889, 29929,
    32041, 32761, 36481, 37249, 38809, 39601, 44521, 49729, 51529, 52441, 54289, 57121, 58081, 63001, 66049, 69169, 72361, 73441, 76729, 78961, 80089, 85849,
    94249, 96721, 97969, 100489, 109561, 113569, 120409, 121801, 124609, 128881, 134689, 139129, 143641, 146689, 151321, 157609, 160801, 167281, 175561, 177241,
    185761, 187489, 192721, 196249, 201601, 208849, 212521, 214369, 218089, 229441, 237169, 241081, 249001, 253009, 259081, 271441, 273529, 292681, 299209, 310249,
    316969, 323761, 326041, 332929, 344569, 351649, 358801, 361201, 368449, 375769, 380689, 383161, 398161, 410881, 413449, 418609, 426409, 434281, 436921, 452929,
    458329, 466489, 477481, 491401, 502681, 516961, 528529, 537289, 546121, 552049, 564001, 573049, 579121, 591361, 597529, 619369, 635209, 654481, 657721, 674041,
    677329, 683929, 687241, 703921, 727609
]

def sieve():
    i, j, k = 1, 1, 1
    while i < 147:
        k = prime[i]
        j = sqp[i]
        while j < MAX:
            tbl[j] = 1
            j += k
    for sz in range(146, len(prime)):
        if not tbl[prime[sz]]:
            prime.append(prime[sz])
    print(f"sz {len(prime)}, prime[{len(prime)-1]}={prime[-1]}")

def bsch(x):
    l, r = 0, len(prime)
    while l < r:
        m = (l + r) >> 1
        if prime[m] == x:
            return m
        if prime[m] < x:
            l = m + 1
        else:
            r = m
    return l - 1

def main():
    A, B = map(int, input().split())
    a, b = A - B, A + B
    if b <= 1:
        print(0)
        return
    if a <= 1:
        a = 2
    sz = bsch(int(b**0.5))
    idx = [1] * (b - a + 1)
    pp = [0] * 41
    for i in range(sz + 1):
        p = prime[i]
        k = 1
        j = p
        while j <= b:
            pp[k] = j
            k += 1
            j *= p
        while k > 1:
            k -= 1
            j = pp[k]
            ll = j * (1 + (a - 1) // j)
            rr = j * (b // j)
            while ll <= rr:
                x = ll - a
                if idx[x] and (base[x] == p or base[x] == 0):
                    if idx[x] < k:
                        idx[x] = 0
                    else:
                        base[x] = p
                    idx[x] = k
                ll += j
    ans = sum(idx)
    print(ans)

sieve()
main()
