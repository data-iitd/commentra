<<<<<<< HEAD

import (
	"bufio"
=======
package main

import (
>>>>>>> 98c87cb78a (data updated)
	"fmt"
	"os"
	"strconv"
	"strings"
)

func main() {
<<<<<<< HEAD
	reader := bufio.NewReader(os.Stdin)
	fmt.Print("Enter two integers: ")
	input, _ := reader.ReadString('\n')
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input 
=======
	var a, b int
	fmt.Scanf("%d %d", &a, &b)
	if a < 10 && b < 10 {
		fmt.Println(a * b)
	} else {
		fmt.Println("-1")
	}
}

>>>>>>> 98c87cb78a (data updated)
