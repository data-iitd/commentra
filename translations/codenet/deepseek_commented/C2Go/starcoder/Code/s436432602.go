<<<<<<< HEAD
=======
package main
>>>>>>> 98c87cb78a (data updated)

import (
	"bufio"
	"fmt"
	"os"
	"strconv"
	"strings"
)

func main() {
	// Read the number of elements (n) and the target value (k)
	reader := bufio.NewReader(os.Stdin)
	fmt.Print("Enter the number of elements (n) and the target value (k): ")
	input, _ := reader.ReadString('\n')
<<<<<<< HEAD
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	input = strings.TrimSuffix(input, "\r")
	input = strings.TrimSuffix(input, "\n\r")
	input = strings.TrimSuffix(input, "\r\n")
	input = strings.TrimSuffix(input, "\n")
	inp
=======
	input = strings.TrimSpace(input)
	input = strings.Replace(input, "\n", "", -1)
	input = strings.Replace(input, "\r", "", -1)
	input = strings.Replace(input, "\t", " ", -1)
	input = strings.Replace(input, "  ", " ", -1)
	input = strings.Replace(input, " ", ",", -1)
	n, k := strings.Split(input, ",")
	n, _ = strconv.Atoi(n)
	k, _ = strconv.Atoi(k)

	// Declare an array to store the elements
	a := make([]int, n)

	// Declare loop variables
	i, j := 0, 0

	// Read n elements into the array a
	fmt.Print("Enter the elements: ")
	for i = 0; i < n; i++ {
		input, _ = reader.ReadString('\n')
		input = strings.TrimSpace(input)
		input = strings.Replace(input, "\n", "", -1)
		input = strings.Replace(input, "\r", "", -1)
		input = strings.Replace(input, "\t", " ", -1)
		input = strings.Replace(input, "  ", " ", -1)
		input = strings.Replace(input, " ", ",", -1)
		a[i], _ = strconv.Atoi(input)
	}

	// Allocate memory for the dynamic programming array dp
	dp := make([]int, k+1)

	// Iterate from 1 to k to fill the dp array
	for i = 1; i <= k; i++ {
		// Initialize the win flag to 0
		win := 0

		// Check each element in the array a to see if it can be subtracted from i
		for j = 0; j < n && a[j] <= i; j++ {
			if dp[i-a[j]] == 0 {
				// If the resulting value is zero, set win to 1
				win = 1
			}
		}

		// Set dp[i] to the win flag
		dp[i] = win
	}

	// Print the result based on the value of dp[k]
	if dp[k] == 1 {
		fmt.Println("First")
	} else {
		fmt.Println("Second")
	}
}

>>>>>>> 98c87cb78a (data updated)
